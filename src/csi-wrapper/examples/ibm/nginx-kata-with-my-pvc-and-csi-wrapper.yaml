apiVersion: v1
kind: Pod
metadata:
  name: nginx
  labels:
    app: nginx
  namespace: kube-system
spec:
  runtimeClassName: kata-remote
  containers:
    - name: ibm-vpc-block-podvm-node-driver
      env:
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
      envFrom:
        - configMapRef:
            name: ibm-vpc-block-csi-configmap
      image: gcr.io/k8s-staging-cloud-provider-ibm/ibm-vpc-block-csi-driver:v5.2.0
      imagePullPolicy: Always
      securityContext:
        privileged: true
        runAsNonRoot: false
        runAsUser: 0
      ports:
        - containerPort: 9808
          name: healthz
          protocol: TCP
      volumeMounts:
        - name: kubelet-data-dir
          mountPath: /var/lib/kubelet
          mountPropagation: Bidirectional
        - mountPath: /tmp
          name: plugin-dir
        - mountPath: /dev
          name: device-dir
        - mountPath: /etc/udev
          name: etcudevpath
        - mountPath: /run/udev
          name: runudevpath
        - mountPath: /lib/udev
          name: libudevpath
        - mountPath: /sys
          name: syspath
        - mountPath: /etc/storage_ibmc
          name: customer-auth
          readOnly: true
    - name: csi-podvm-wrapper
      env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAME_SPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_UID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: POD_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
      command: ["csi-podvm-wrapper"]
      args:
        - --v=5
        - --endpoint=/tmp/csi-podvm-wrapper.sock
        - --target-endpoint=/tmp/csi.sock
        - --namespace=kube-system
      image: quay.io/confidential-containers/csi-podvm-wrapper:latest
      imagePullPolicy: Always
      volumeMounts:
        - mountPath: /tmp
          name: plugin-dir
    - name: nginx
      image: nginx:stable
      imagePullPolicy: Always
      volumeMounts:
        - name: my-volume
          mountPath: /mount-path
          mountPropagation: HostToContainer
  serviceAccountName: ibm-vpc-block-node-sa
  volumes:
    - name: kubelet-data-dir
      hostPath:
        path: /var/lib/kubelet # OpenShift worker, for kubernetes /var/data/kubelet
        type: Directory
    - emptyDir: {}
      name: plugin-dir
    - hostPath:
        path: /dev
        type: Directory
      name: device-dir
    - hostPath:
        path: /etc/udev
        type: Directory
      name: etcudevpath
    - hostPath:
        path: /run/udev
        type: Directory
      name: runudevpath
    - hostPath:
        path: /lib/udev
        type: Directory
      name: libudevpath
    - hostPath:
        path: /sys
        type: Directory
      name: syspath
    - name: customer-auth
      secret:
        secretName: storage-secret-store
    - name: my-volume
      persistentVolumeClaim:
        claimName: my-pvc
