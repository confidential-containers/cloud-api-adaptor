# Copyright Confidential Containers Contributors
#
# SPDX-License-Identifier: Apache-2.0
#
# Creates a builder container image that should be used to build the Pod VM
# disk inside a container.
#
FROM registry.access.redhat.com/ubi9/ubi:9.2

ARG ARCH="s390x"
ARG GO_VERSION="1.20.8"
ARG PROTOC_VERSION="24.3"
ARG PROTOC_ARCH="s390_64"
ARG RUST_VERSION="1.72.0"
ARG ORG_ID
ARG ACTIVATION_KEY
ARG YQ_VERSION="v4.35.1"

# This registering RHEL when building on an unsubscribed system
# If you are running a UBI container on a registered and subscribed RHEL host, the main RHEL Server repository is enabled inside the standard UBI container
RUN if [[ -n "${ACTIVATION_KEY}" && -n "${ORG_ID}" ]]; then \
    export SMDEV_CONTAINER_OFF=1; \
    subscription-manager register --org=${ORG_ID} --activationkey=${ACTIVATION_KEY}; \
    subscription-manager repos --enable codeready-builder-for-rhel-9-s390x-rpms; \
    dnf groupinstall -y 'Development Tools'; \
    dnf install -y yum-utils gnupg git --allowerasing curl pkg-config clang perl libseccomp-devel gpgme-devel \
        device-mapper-devel qemu-kvm unzip wget libassuan-devel genisoimage cloud-utils-growpart cloud-init; \
    else \
    dnf groupinstall -y 'Development Tools'; \
    dnf install -y yum-utils gnupg git --allowerasing curl pkg-config clang perl libseccomp-devel gpgme-devel \
        device-mapper-devel qemu-kvm unzip wget libassuan-devel genisoimage cloud-utils-growpart cloud-init; \
    fi

ADD https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_${ARCH} /usr/local/bin/yq
RUN chmod a+x /usr/local/bin/yq
 
RUN curl https://dl.google.com/go/go${GO_VERSION}.linux-${ARCH}.tar.gz -o go${GO_VERSION}.linux-${ARCH}.tar.gz && \
    rm -rf /usr/local/go && tar -C /usr/local -xzf go${GO_VERSION}.linux-${ARCH}.tar.gz && \
    rm -f go${GO_VERSION}.linux-${ARCH}.tar.gz

# set a corrspond qemu-system-* named link to qemu-kvm
RUN ln -s /usr/libexec/qemu-kvm /usr/bin/qemu-system-$(uname -m)

# cloud-utils package is not available for rhel.
RUN git clone https://github.com/canonical/cloud-utils
RUN cd cloud-utils && make install

RUN curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain "${RUST_VERSION}"

ENV PATH "/root/.cargo/bin:/usr/local/go/bin:$PATH"

RUN wget https://github.com/protocolbuffers/protobuf/releases/download/v${PROTOC_VERSION}/protoc-${PROTOC_VERSION}-linux-${PROTOC_ARCH}.zip && \
    unzip protoc-${PROTOC_VERSION}-linux-${PROTOC_ARCH}.zip -d /usr/local && rm -f protoc-${PROTOC_VERSION}-linux-${PROTOC_ARCH}.zip

WORKDIR /src

ARG CAA_SRC="https://github.com/redobed/cloud-api-adaptor"
ARG CAA_SRC_BRANCH="rhel"

ARG KATA_SRC="https://github.com/kata-containers/kata-containers"
ARG KATA_SRC_BRANCH="CCv0"

RUN git clone ${CAA_SRC} -b ${CAA_SRC_BRANCH} cloud-api-adaptor
RUN git clone ${KATA_SRC} -b ${KATA_SRC_BRANCH} kata-containers

ENV GOPATH /src