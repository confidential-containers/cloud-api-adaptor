# syntax=docker/dockerfile:1.5-labs
# Copyright Confidential Containers Contributors
#
# SPDX-License-Identifier: Apache-2.0
#
# Creates a builder container image that should be used to build the Pod VM
# disk inside a container.
#
FROM quay.io/centos/centos:stream9

ARG GO_VERSION
ARG PROTOC_VERSION
ARG RUST_VERSION
ARG YQ_VERSION
ARG YQ_CHECKSUM

# Without setting ENV gh-action is failing to use the correct values
ENV GO_VERSION ${GO_VERSION}
ENV RUST_VERSION ${RUST_VERSION}
ENV PROTOC_VERSION ${PROTOC_VERSION}

RUN dnf install -y 'dnf-command(config-manager)' && dnf config-manager --set-enabled crb && \
    dnf groupinstall -y 'Development Tools' && \
    dnf install -y yum-utils gnupg git pkg-config libseccomp-devel gpgme-devel \
        device-mapper-devel qemu-kvm unzip wget libassuan-devel golang-github-cpuguy83-md2man \
	genisoimage cloud-utils-growpart cloud-init clang perl tpm2-tss-devel && \
    yum-config-manager --add-repo https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo && \
    dnf install -y packer && \
    dnf clean all && \
    curl https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz -o go${GO_VERSION}.linux-amd64.tar.gz && \
    rm -rf /usr/local/go && tar -C /usr/local -xzf go${GO_VERSION}.linux-amd64.tar.gz && \
    rm -f go${GO_VERSION}.linux-amd64.tar.gz

ADD --checksum=${YQ_CHECKSUM} https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_amd64 /usr/local/bin/yq
RUN chmod a+x /usr/local/bin/yq

# set a correspond qemu-system-* named link to qemu-kvm
RUN ln -s /usr/libexec/qemu-kvm /usr/bin/qemu-system-$(uname -m)

# cloud-utils package is not available for centos.
RUN git clone https://github.com/canonical/cloud-utils
RUN cd cloud-utils && make install

RUN curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain ${RUST_VERSION}

ENV PATH "/root/.cargo/bin:/usr/local/go/bin:$PATH"

RUN wget https://github.com/protocolbuffers/protobuf/releases/download/v${PROTOC_VERSION}/protoc-${PROTOC_VERSION}-linux-x86_64.zip && \
    unzip protoc-${PROTOC_VERSION}-linux-x86_64.zip -d /usr/local && rm -f protoc-${PROTOC_VERSION}-linux-x86_64.zip

WORKDIR /src

ENV GOPATH /src
