# Copyright Confidential Containers Contributors
#
# SPDX-License-Identifier: Apache-2.0
#
# Builds pod vm image inside container
#
ARG BUILDER_IMG="quay.io/confidential-containers/podvm-builder-ubuntu"

# Override it via build-args for different platforms
ARG BINARIES_IMG="quay.io/confidential-containers/podvm-binaries-ubuntu-amd64"

FROM ${BINARIES_IMG} AS podvm_binaries
FROM ${BUILDER_IMG} AS podvm_builder

ARG CLOUD_PROVIDER
ARG SE_BOOT
ARG PODVM_DISTRO=ubuntu
ARG UEFI=false

# If not provided, uses system architecture
ARG ARCH
ARG CAA_SRC
ARG CAA_SRC_REF

ENV CLOUD_PROVIDER ${CLOUD_PROVIDER}
ENV PODVM_DISTRO ${PODVM_DISTRO}
ENV ARCH ${ARCH}
ENV UEFI ${UEFI}
ENV SE_BOOT ${SE_BOOT}

RUN if [ -n "${CAA_SRC}" ]; then \
      rm -rf cloud-api-adaptor && \
      git clone ${CAA_SRC} cloud-api-adaptor;\
    fi && \
    if [ -n "${CAA_SRC_REF}" ]; then \
      cd cloud-api-adaptor && \
      git fetch origin ${CAA_SRC_REF} && \
      git checkout FETCH_HEAD -b ${CAA_SRC_REF} ;\
    fi
# Installs add-ons for foreign target, if required
RUN ./cloud-api-adaptor/podvm/hack/cross-build-extras.sh

# Defaults to Ubuntu Focal amd64 release image. These variables can be overriden as needed
ARG IMAGE_URL
ARG IMAGE_CHECKSUM

ENV IMAGE_URL ${IMAGE_URL}
ENV IMAGE_CHECKSUM ${IMAGE_CHECKSUM}

# Copy the binaries to podvm/files folder
COPY --from=podvm_binaries /podvm-binaries.tar.gz /src/cloud-api-adaptor/podvm/files
RUN tar xvf /src/cloud-api-adaptor/podvm/files/podvm-binaries.tar.gz -C /src/cloud-api-adaptor/podvm/files

# Copy the pause_bundle to podvm/files folder
COPY --from=podvm_binaries /pause-bundle.tar.gz /src/cloud-api-adaptor/podvm/files
RUN tar xvf /src/cloud-api-adaptor/podvm/files/pause-bundle.tar.gz -C /src/cloud-api-adaptor/podvm/files

# Copy HOST KEY documents to podvm/files folder for Secure Execution
# Use one files/.dummy.crt file at here to avoid `COPY failed: no source files were specified` for non-SE build
COPY files/*.crt /src/cloud-api-adaptor/podvm/files/

RUN cd cloud-api-adaptor/podvm && \
     make BINARIES= PAUSE_BUNDLE= image

# The below instructions can be used if you prefer to rebuild all the binaries
#RUN cd cloud-api-adaptor/podvm && \
#     make binaries
#RUN  make image

FROM scratch
COPY --from=podvm_builder /src/cloud-api-adaptor/podvm/output/*.qcow2 /
