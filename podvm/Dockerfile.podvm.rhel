# Copyright Confidential Containers Contributors
#
# SPDX-License-Identifier: Apache-2.0
#
# Builds pod vm image inside container
#
ARG BUILDER_IMG

FROM ${BUILDER_IMG} AS podvm_builder

ARG CLOUD_PROVIDER
ARG PODVM_DISTRO=rhel
ARG AA_KBC="offline_fs_kbc"
ARG CAA_SRC=""
ARG CAA_SRC_REF=""

ARG RHEL_IMAGE_URL="/tmp/rhel.qcow2"
ARG RHEL_IMAGE_CHECKSUM

ENV CLOUD_PROVIDER ${CLOUD_PROVIDER}
ENV PODVM_DISTRO ${PODVM_DISTRO}
ENV AA_KBC ${AA_KBC}
ENV RHEL_IMAGE_URL ${RHEL_IMAGE_URL}
ENV RHEL_IMAGE_CHECKSUM ${RHEL_IMAGE_CHECKSUM}

# Building binaries separately allows for reuse in case of error
# with image building step OTOH it may increase layers size
#RUN cd cloud-api-adaptor/podvm && \
#     LIBC=gnu make binaries

# workaround to ensure hashicorp packer is called instead
# of cracklib packer which is installed by default
ENV PATH="/usr/bin:${PATH}"

RUN if [ -n "${CAA_SRC}" ]; then \
       rm -rf cloud-api-adaptor && \
       git clone ${CAA_SRC} cloud-api-adaptor;\
     fi && \
     if [ -n "${CAA_SRC_REF}" ]; then \
       cd cloud-api-adaptor && \
       git fetch origin ${CAA_SRC_REF} && \
       git checkout FETCH_HEAD -b ${CAA_SRC_REF} ;\
     fi

RUN cd cloud-api-adaptor/podvm && \
     LIBC=gnu make image && \
     (make clean_sources; go clean --cache --modcache; rustup self uninstall -y; rm -rf /root/.cache/packer/; true)

FROM scratch
COPY --from=podvm_builder /src/cloud-api-adaptor/podvm/output/*.qcow2 /
