# Copyright Confidential Containers Contributors
#
# SPDX-License-Identifier: Apache-2.0
#
# Creates a builder container image that should be used to build the Pod VM
# disk inside a container.
#
FROM ubuntu:22.04

ARG GO_VERSION="1.19.6"
ARG PROTOC_VERSION="3.11.4"
ARG RUST_VERSION="1.66.0"

# Without setting ENV gh-action is failing to use the correct values
ENV GO_VERSION ${GO_VERSION}
ENV RUST_VERSION ${RUST_VERSION}
ENV PROTOC_VERSION ${PROTOC_VERSION}

ENV DEBIAN_FRONTEND noninteractive

RUN apt-get update -y && \
    apt-get install --no-install-recommends -y \
        build-essential \
        clang \
        cloud-image-utils \
        curl \
        git \
        gnupg \
        libdevmapper-dev \
        libgpgme-dev \
        libtss2-dev \
        lsb-release \
        musl-tools \
        pkg-config \
        qemu-kvm   \
        unzip \
        wget \
    && \
    curl -fsSL https://apt.releases.hashicorp.com/gpg | apt-key add - && \
    echo "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | tee -a /etc/apt/sources.list && \
    apt-get update && apt-get install --no-install-recommends -y packer && \
    curl -fsSL https://download.01.org/intel-sgx/sgx_repo/ubuntu/intel-sgx-deb.key | apt-key add - && \
    echo "deb [arch=amd64] https://download.01.org/intel-sgx/sgx_repo/ubuntu $(lsb_release -cs) main" | tee -a /etc/apt/sources.list.d/intel-sgx.list && \
    apt-get update && apt-get install --no-install-recommends -y libtdx-attest-dev && \
    apt-get clean && \
    curl https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz -o go${GO_VERSION}.linux-amd64.tar.gz && \
    rm -rf /usr/local/go && tar -C /usr/local -xzf go${GO_VERSION}.linux-amd64.tar.gz && \
    rm -f go${GO_VERSION}.linux-amd64.tar.gz


RUN curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain ${RUST_VERSION}

ENV PATH "/root/.cargo/bin:/usr/local/go/bin:$PATH"

RUN echo $PATH

RUN rustup target add x86_64-unknown-linux-musl && ln -sf /usr/bin/g++ /bin/musl-g++


RUN wget https://github.com/protocolbuffers/protobuf/releases/download/v${PROTOC_VERSION}/protoc-${PROTOC_VERSION}-linux-x86_64.zip && \
    unzip protoc-${PROTOC_VERSION}-linux-x86_64.zip -d /usr/local && rm -f protoc-${PROTOC_VERSION}-linux-x86_64.zip

WORKDIR /src

ARG CAA_SRC="https://github.com/confidential-containers/cloud-api-adaptor"
ARG CAA_SRC_REF="main"
RUN echo "Cloning ${CAA_SRC} @ ${CAA_SRC_REF}" && \
    mkdir -p "cloud-api-adaptor" && \
    cd "cloud-api-adaptor" && \
    git init && \
    git remote add origin "${CAA_SRC}" && \
    git fetch --depth=1 origin "${CAA_SRC_REF}" && \
    git reset --hard FETCH_HEAD

ARG KATA_SRC="https://github.com/kata-containers/kata-containers"
ARG KATA_SRC_REF="CCv0"
RUN echo "Cloning ${KATA_SRC} @ ${KATA_SRC_REF}" && \
    mkdir -p "kata-containers" && \
    cd "kata-containers" && \
    git init && \
    git remote add origin "${KATA_SRC}" && \
    git fetch --depth=1 origin "${KATA_SRC_REF}" && \
    git reset --hard FETCH_HEAD

ENV GOPATH /src
