#
# SPDX-License-Identifier: Apache-2.0
#

include Makefile.inc

.PHONY: image clean clean_sources

YQ_PATH = ../hack/yq.sh
VERSIONS_SRC := ../versions.yaml

PODVM_DISTRO ?= ubuntu

ifndef IMAGE_URL
IMAGE_URL != $(YQ_PATH) ".cloudimg.$(PODVM_DISTRO).$($(PODVM_DISTRO)_RELEASE).$(DEB_ARCH).url" < $(VERSIONS_SRC)
ifneq ($(.SHELLSTATUS), 0)
$(error "IMAGE_URL is not set, and could not be automatically set from $(VERSIONS_SRC)")
endif
endif

ifndef IMAGE_CHECKSUM
IMAGE_CHECKSUM != $(YQ_PATH) ".cloudimg.$(PODVM_DISTRO).$($(PODVM_DISTRO)_RELEASE).$(DEB_ARCH).checksum" < $(VERSIONS_SRC)
ifneq ($(.SHELLSTATUS), 0)
$(error "IMAGE_CHECKSUM is not set, and could not be automatically set from $(VERSIONS_SRC)")
endif
endif

IMAGE_SUFFIX := .qcow2
KATA_AGENT_SRC := ../../kata-containers/src/agent
STATIC_LIBSECCOMP_BUILDER := ../../kata-containers/ci/install_libseccomp.sh
AGENT_PROTOCOL_FORWARDER_SRC := ../

QEMU_MACHINE_TYPE_s390x := s390-ccw-virtio

UEFI ?= false
UEFI_FIRMWARE_LOCATION ?=

SE_BOOT ?= 0

# Env variable for default qemu builder options across distros/arch
PACKER_DEFAULT_OPTS ?=

OPTS := -var qemu_image_name=${IMAGE_FILE} \
	-var cloud_image_url=${IMAGE_URL} \
	-var cloud_image_checksum=${IMAGE_CHECKSUM} \
	-var se_boot=${SE_BOOT}

ifneq ($(HOST_ARCH),$(ARCH))
	OPTS += -var machine_type=${QEMU_MACHINE_TYPE_${ARCH}}
ifndef QEMU_BINARY
	OPTS += -var qemu_binary=qemu-system-${ARCH}
endif
endif

ifdef QEMU_BINARY
	OPTS += -var qemu_binary=${QEMU_BINARY}
endif

ifeq ($(PODVM_DISTRO),rhel)
	OPTS += -var disk_size=11144
endif

# UEFI is enabled for x86_64 only
ifeq ($(UEFI),true)
	OPTS += -var is_uefi=true -var os_arch="x86_64"
ifdef UEFI_FIRMWARE_LOCATION
	OPTS += -var uefi_firmware=${UEFI_FIRMWARE_LOCATION}
endif
endif

image: $(IMAGE_FILE)

$(IMAGE_FILE): $(BINARIES) $(FILES)
	rm -fr output
	rm -f cloud-init.img
	cloud-localds cloud-init.img qcow2/userdata.cfg
	mkdir -p toupload
	if [ "${SE_BOOT}" = "1" ] && [ "${ARCH}" = "s390x" ]; then \
		qemu-img create -f qcow2 "se-${IMAGE_FILE}" 100G; \
	fi
	packer build ${PACKER_DEFAULT_OPTS} ${OPTS} qcow2/$(PODVM_DISTRO)
	rm -fr toupload
	rm -f cloud-init.img

clean:
	rm -f "$(IMAGE_FILE)" "$(UBUNTU_IMAGE_FILE)" $(BINARIES)
	rm -fr "$(SKOPEO_SRC)" "$(UMOCI_SRC)" "$(PAUSE_SRC)" "$(FILES_DIR)/$(PAUSE_BUNDLE)"

.PHONY: force
force:
