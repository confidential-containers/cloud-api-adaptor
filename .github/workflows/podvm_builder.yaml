name: (Callable) Build and push podvm_builder images
on:
  workflow_call:
    inputs:
      registry:
        default: 'quay.io/confidential-containers'
        required: false
        type: string
      image_tag:
        default: ''
        required: false
        type: string
      git_ref:
        description: Git ref to checkout the cloud-api-adaptor repository.
        required: true
        type: string

defaults:
  run:
    working-directory: src/cloud-api-adaptor

jobs:
  build:
    name: Create pod vm builder image
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        os:
          # Please keep this list in alphabetical order.
          - ubuntu
        runner:
          - ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: "${{ inputs.git_ref }}"

    - name: Rebase the code
      if: github.event_name == 'pull_request_target'
      working-directory: ./
      run: |
        ./hack/ci-helper.sh rebase-atop-of-the-latest-target-branch

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker container Registry
      if: ${{ startsWith(inputs.registry, 'docker.io') }}
      uses: docker/login-action@v2
      with:
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Login to Quay container Registry
      if: ${{ startsWith(inputs.registry, 'quay.io') }}
      uses: docker/login-action@v2
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_PASSWORD }}

    - name: Login to Github Container Registry
      if: ${{ startsWith(inputs.registry, 'ghcr.io') }}
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push
      run: make podvm-builder
      env:
          PUSH: true
          REGISTRY: ${{ inputs.registry }}
          PODVM_TAG: ${{ inputs.image_tag }}
          PODVM_DISTRO: ${{ matrix.os }}
