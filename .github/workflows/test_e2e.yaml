name: test-e2e
on: [pull_request]

jobs:
  # Build and push the podvm builder image for each OS.
  #
  podvm_builder:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os:
          # Please keep this list in alphabetical order.
          #- centos
          - ubuntu
        include:
          #- os: centos
          #  dockerfile: Dockerfile.podvm_builder.centos
          - os: ubuntu
            dockerfile: Dockerfile.podvm_builder
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Github container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build the podvm builder
      uses: docker/build-push-action@v3
      with:
        tags: |
          ghcr.io/${{ github.repository_owner }}/ci-podvm-builder-${{ matrix.os }}:pr${{ github.event.number  }}
        push: true
        context: podvm
        platforms: linux/amd64
        file: |
          podvm/${{ matrix.dockerfile }}
        build-args: |
          "CAA_SRC=https://github.com/${{ github.repository }}.git"
          "CAA_SRC_REF=${{ github.ref }}"
  # Build the podvm image and extract the qcow2 for each os/provider combination.
  podvm:
    needs: podvm_builder
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os:
          # Please keep this list in alphabetical order.
          #- centos
          - ubuntu
        provider:
          - generic
        include:
          #- os: centos
          #  dockerfile: Dockerfile.podvm.centos
          - os: ubuntu
            dockerfile: Dockerfile.podvm
    env:
      builder_image: ghcr.io/${{ github.repository_owner }}/ci-podvm-builder-${{ matrix.os }}:pr${{ github.event.number }}
      podvm_image: podvm-${{ matrix.provider }}-${{ matrix.os }}:pr${{ github.event.number }}
      qcow2: podvm-${{ matrix.provider }}-${{ matrix.os }}.qcow2
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build the podvm image
      uses: docker/build-push-action@v3
      with:
        tags: |
          "${{ env.podvm_image }}"
        push: false
        load: true
        context: podvm
        platforms: linux/amd64
        file: |
          podvm/${{ matrix.dockerfile }}
        build-args: |
          "CLOUD_PROVIDER=${{ matrix.provider }}"
          "BUILDER_IMG=${{ env.builder_image }}"

    - name: Extract the podvm qcow2
      run: ./hack/download-image.sh ${{ env.podvm_image }} . -o ${{ env.qcow2 }}
      working-directory: podvm

    - name: Cache the qcow2 file
      uses: actions/cache/save@v3
      env:
        qcow2_path: podvm/${{ env.qcow2 }}
      with:
        path: |
          ${{ env.qcow2_path }}
        key: ${{ env.qcow2}}-${{ hashFiles(env.qcow2_path) }}
  # TODO: This almost identical to image.yaml. Let's use shared workflows to avoid duplication.
  caa-build-dev:
    runs-on: ubuntu-latest
    env:
      go_version: 1.18
    strategy:
      fail-fast: false
      matrix:
        arches:
          - linux/amd64
    steps:
    - name: Checkout the code
      uses: actions/checkout@v3

    - name: Setup Golang version ${{ env.go_version }}
      uses: actions/setup-go@v3
      with:
        go-version: ${{ env.go_version }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Install build dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y libvirt-dev

    - name: Login to Github container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push the cloud-api-adaptor image
      uses: docker/build-push-action@v3
      with:
        tags: |
          ghcr.io/${{ github.repository_owner }}/ci-cloud-api-adaptor-dev:pr${{ github.event.number  }}
        push: true
        context: .
        platforms: ${{ matrix.arches }}
        file: Dockerfile

