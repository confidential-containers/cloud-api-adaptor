# Copyright Confidential Containers Contributors
# SPDX-License-Identifier: Apache-2.0
#
# Build and push the peerpodconfig-ctrl image
---
name: (Callable) Build and push peerpodconfig-ctrl image
on:
  workflow_call:
    inputs:
      registry:
        default: 'quay.io/confidential-containers'
        description: 'Image registry (e.g. "ghcr.io/confidential-containers") where the built image will be pushed to'
        required: false
        type: string
      image_tags:
        default: ''
        description: 'Comma-separated list of tags for the dev built image (e.g. latest,ci-dev). By default uses the values from hack/build.sh'
        required: true
        type: string
      git_ref:
        default: 'main'
        description: Git ref to checkout the cloud-api-adaptor repository. Defaults to main.
        required: false
        type: string

jobs:
  build_push_peerpodconfig-ctrl:
    name: build and push peerpodconfig-ctrl
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/peerpodconfig-ctrl
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: "${{ inputs.git_ref }}"
      - name: Read properties from versions.yaml
        run: |
          go_version="$(yq '.tools.golang' ../cloud-api-adaptor/versions.yaml)"
          [ -n "$go_version" ]
          echo "GO_VERSION=${go_version}" >> "$GITHUB_ENV"
      - name: Setup Golang version ${{ env.GO_VERSION }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Quay container registry
        if: ${{ startsWith(inputs.registry, 'quay.io') }}
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: Login to Github Container Registry
        if: ${{ startsWith(inputs.registry, 'ghcr.io') }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push image
        run: |
          tags="${{ inputs.image_tags }}"
          for t in ${tags/,/ }; do
            echo "::group::Build and push tag ${t}"
            make docker-build docker-push IMG=${{ inputs.registry }}/peerpodconfig-ctrl:${t}
            echo "::endgroup::"
          done
